# -*- coding: utf-8 -*-
"""
#Sherry Kausch
#slk7s
#Presentation
"""

import unittest

from Query_2 import *
#testing WineQuery Class
class WineAcidQueryTests(unittest.TestCase): # inherit from unittest.TestCase

    def test_groupMeans(self):
        #testing groupMeans function by comparing the position 1,1 of the datframe generated by the function to the same position in the 
        #dataframe generated byusing the groupby funtion with the original dataframe
        wine2 = WineAcidQuery(dfr, 'quality', 'Acid_level') 
        a = wine1.groupMeans()
        b = dfr.groupby(['quality', 'Acid_level']).mean()
        self.assertEqual(a.iat[1,1], b.iat[1,1])
        
    def test_groupMeans(self):
        #testing groupMeans function by comparing the position in middle of the datframe generated by the function to the same position in the 
        #dataframe generated byusing the groupby funtion with the original dataframe
        wine2 = WineAcidQuery(dfr, 'quality', 'Acid_level') 
        a = wine1.groupMeans()
        b = dfr.groupby(['quality', 'Acid_level']).mean()
        self.assertEqual(a.iat[4,7], b.iat[4,7])
        
    def test_groupSize(self):
        #testing groupSize function by comparing item in position 1 with iten in same position from original dataframe
        wine2 = WineAcidQuery(dfr, 'quality', 'Acid_level') 
        c = wine2.groupSize()
        d = dfr.groupby(['quality', 'Acid_level']).size()
        self.assertEqual(c[1], d[1])
        
    def test_groupDescribe_firstpos(self):
        #testing groupDescribe funtion by comparing item in position 1,1 with same position in dataframe generated by using the original panda function
        wine2 = WineAcidQuery(dfr, 'quality', 'Acid_level') 
        e = wine1.groupDescribe()
        f = dfr.groupby(['quality', 'Acid_level']).describe()
        self.assertEqual(e.iat[1,1], f.iat[1,1])
    
    def test_groupDescribe_middlepos(self):
        #testing groupDescribe funtion by comparing item in middle position with same position in dataframe generated by using the original panda function
        wine2 = WineAcidQuery(dfr, 'quality', 'Acid_level') 
        e = wine1.groupDescribe()
        f = dfr.groupby(['quality', 'Acid_level']).describe()
        self.assertEqual(e.iat[3,6], f.iat[3,6])
        
if __name__ == '__main__':
    unittest.main()
  
